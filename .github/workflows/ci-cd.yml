name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, milestone-* ]  # Added milestone branches
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: leedz-467700
  REGION: us-central1
  FRONTEND_SERVICE: leedz-frontend
  BACKEND_SERVICE: leedz-backend

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    # Test Backend
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Build Backend
      working-directory: ./backend
      run: npm run build --if-present
    
    # Test Frontend
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Test Frontend
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false
    
    # Run linting
    - name: Lint Backend
      working-directory: ./backend
      run: npm run lint --if-present
    
    - name: Lint Frontend  
      working-directory: ./frontend
      run: npm run lint --if-present

  # ðŸš« DEPLOYMENT DISABLED FOR DEVELOPMENT PHASE
  # We'll re-enable this when we're ready for production deployment
  # and have properly configured Google Cloud authentication
  
  # build-and-deploy:
  #   name: Build and Deploy
  #   runs-on: ubuntu-latest
  #   needs: test
  #   # Only deploy from main branch AND when GCP secrets are available
  #   if: github.ref == 'refs/heads/main' && github.repository_owner != 'dependabot[bot]'
  #   
  #   steps:
  #   - uses: actions/checkout@v3
  #   
  #   - id: 'auth'
  #     name: 'Authenticate to Google Cloud'
  #     uses: 'google-github-actions/auth@v1'
  #     with:
  #       credentials_json: '${{ secrets.GCP_SA_KEY }}'
  #   
  #   - name: 'Set up Cloud SDK'
  #     uses: 'google-github-actions/setup-gcloud@v1'
  #   
  #   - name: 'Configure Docker'
  #     run: gcloud auth configure-docker
  #   
  #   # Build and push Backend
  #   - name: Build Backend Image
  #     run: |
  #       docker build -t gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA ./backend
  #       docker push gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA
  #   
  #   # Build and push Frontend
  #   - name: Build Frontend Image
  #     run: |
  #       docker build -t gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA ./frontend
  #       docker push gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA
  #   
  #   # Deploy Backend to Cloud Run
  #   - name: Deploy Backend
  #     run: |
  #       gcloud run deploy $BACKEND_SERVICE \
  #         --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA \
  #         --platform managed \
  #         --region $REGION \
  #         --allow-unauthenticated \
  #         --set-env-vars="NODE_ENV=production" \
  #         --memory=512Mi \
  #         --cpu=1
  #   
  #   # Deploy Frontend to Cloud Run
  #   - name: Deploy Frontend
  #     run: |
  #       gcloud run deploy $FRONTEND_SERVICE \
  #         --image gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA \
  #         --platform managed \
  #         --region $REGION \
  #         --allow-unauthenticated \
  #         --port=80 \
  #         --memory=256Mi \
  #         --cpu=1 